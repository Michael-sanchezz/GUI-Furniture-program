import java.awt.*;
import java.awt.Font;
import java.awt.event.*;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;
import java.text.NumberFormat;

//InvoiceApp contains main
//Console takes input for string and int
//ProductDB sets data and stores it into Product
//Product stores data
//Invoice has the array list and adds all data from Product and LineItem 
//StringUtil is the template for display purposes
//LineItem stores data about quantity and data about each object
public class InvoiceApp 
{
	String furniture_items[] = {"None Selected", "Couches", "Chairs","Light Fixtures","Cabinets", "Beds", "Tables"};
	String qty[] = {"Select Quantity", "1","2","3","4"};
	JComboBox<?> dropbox= new JComboBox<Object>(furniture_items);
	JComboBox<?> dropbox_qty= new JComboBox<Object>(qty);
	JMenu submenu,menu;
	JMenuItem item1,item2;
	JFrame f= new JFrame("Furniture purchasing program");
	JFrame f1 = new JFrame("Table of Items");

	JTextField t1,t2,t3,t4,t5;// t1,t2 handle input t3,t4,t5 handle output
	JTextField check_qty1,check_qty2,check_qty3,check_qty4,check_qty5,check_qty6;//quantity for checkbox
	JButton b1,b2,b3,dropbox_button;//this handles all the buttons
	JCheckBox checkbox1,checkbox2,checkbox3,checkbox4,checkbox5,checkbox6;
	
	JLabel lab1= new JLabel("Set Furniture");
	JLabel lab2= new JLabel("Enter Quantity");
	JLabel lab3= new JLabel("Price of item");
	JLabel lab4= new JLabel("Total");
	JLabel lab5= new JLabel("New Invoice");
	JLabel checkbox_qty_label= new JLabel("Qty");
	JLabel dropbox_label = new JLabel("Set Furniture with dropbox");
	JLabel tooltip = new JLabel("hover here for code options");
	
	public static DefaultTableModel model = new DefaultTableModel ();//used in JTable
	public double invoiceofitems=0;//displays the invoice in window 1//used to hold the cost of all items in getInvoice class

public InvoiceApp() 
{	
	JFrame f= new JFrame("Furniture purchasing program");
	JPanel p1= new JPanel();
	JMenuBar mb= new JMenuBar();
	f.setJMenuBar(mb);
	menu = new JMenu("File");
	item1 = new JMenuItem("Show Invoice");
	item1.addActionListener(new ListentoMenuItem1());
	item2 = new JMenuItem("Display All Items");
	item2.addActionListener(new DisplayTable());
	menu.add(item1);
	menu.add(item2);
	mb.add(menu);
	p1.setLayout(null);//allows you to set label location
	
	//these are the textfields in the main window
	t1= new JTextField();//furniture type
	
	
	t1.setBounds(100, 50, 150,20);
	t2= new JTextField();//quantity
	t2.setBounds(270, 50, 150,20);
	t3= new JTextField();//price
	t3.setBounds(100, 100, 150,20);
	t3.setEditable(false);
	t4= new JTextField();//total
	t4.setBounds(270, 100, 150,20);
	t4.setEditable(false);
	t5= new JTextField();//invoice
	t5.setBounds(100, 200, 150,20);
	t5.setEditable(false);
	//these are qty textfields for checkboxes
	check_qty1= new JTextField();
	check_qty1.setBounds(80, 260, 16,25);
	check_qty2= new JTextField();
	check_qty2.setBounds(80, 290, 16,25);
	check_qty3= new JTextField();
	check_qty3.setBounds(80, 320, 16,25);
	check_qty4= new JTextField();
	check_qty4.setBounds(80, 350, 16,25);
	check_qty5= new JTextField();
	check_qty5.setBounds(80, 380, 16,25);
	check_qty6= new JTextField();
	check_qty6.setBounds(80, 410, 16,25);
	//these are the buttons
	b1= new JButton("Add To Cart");
	b1.setBounds(100,140, 150,20);
	b1.addActionListener(new GetInvoice());
	b2= new JButton("Show Cart");
	b2.setBounds(270,140,150,20);
	b2.addActionListener(new DisplayTable());
	b3= new JButton("Set Furniture");
	b3.setBounds(80,440, 200,20);
	b3.addActionListener(new checkBox());
	dropbox_button = new JButton("order with dropbox");
	dropbox_button.setBounds(440,140,150,20);
	dropbox_button.addActionListener(new DropboxOrder());
	//these are the labels
	lab1.setSize(100,20);
	lab1.setFont(new java.awt.Font("Arial", Font.BOLD, 14));
	lab1.setBackground(Color.YELLOW);
	lab1.setForeground(Color.BLUE);
	lab1.setLocation(100,30);
	lab2.setSize(100,20);
	lab2.setLocation(270,30);
	lab3.setSize(150,20);
	lab3.setLocation(100,80);
	lab4.setSize(150,20);
	lab4.setLocation(270,80);
	lab5.setSize(150,20);
	lab5.setLocation(100,180);
	dropbox_label.setLocation(440,30);
	dropbox_label.setSize(200,20);
	checkbox_qty_label.setSize(30,20);
	checkbox_qty_label.setLocation(75,230);
	tooltip.setToolTipText("Couches, Chairs ,Beds ,Tables, Light Fixtures, Cabinets");
	tooltip.setSize(200,20);
	tooltip.setLocation(270,180);
	
	//these are checkbox items
	checkbox1= new JCheckBox("Couches @ 84.54");
	checkbox1.setBounds(100, 260, 150,20);
	checkbox2= new JCheckBox("Chairs @ 33.78");
	checkbox2.setBounds(100, 290, 150,20);
	checkbox3= new JCheckBox("Beds @ 128.21");
	checkbox3.setBounds(100,320,150,20);
	checkbox4= new JCheckBox("Tables @ 79.21");
	checkbox4.setBounds(100,350,150,20);
	checkbox5= new JCheckBox("Light Fixtures @ 20.21");
	checkbox5.setBounds(100,380,200,20);
	checkbox6= new JCheckBox("Cabinets @ 98.21");
	checkbox6.setBounds(100,410,150,20);
	
	//this is the panel
	//labels
	p1.add(lab1);
	p1.add(lab2);
	p1.add(lab3);
	p1.add(lab4);
	p1.add(lab5);
	p1.add(dropbox_label);
	p1.add(checkbox_qty_label);
	//buttons
	p1.add(b1);
	p1.add(b2);
	p1.add(b3);
	p1.add(dropbox_button);
	//textefields
	p1.add(t1);
	p1.add(t2);
	p1.add(t3);
	p1.add(t4);
	p1.add(t5);
	//checkbox items
	p1.add(checkbox1);
	p1.add(checkbox2);
	p1.add(checkbox3);
	p1.add(checkbox4);
	p1.add(checkbox5);
	p1.add(checkbox6);
	//checkbox quantity fields
	p1.add(check_qty1);
	p1.add(check_qty2);
	p1.add(check_qty3);
	p1.add(check_qty4);
	p1.add(check_qty5);
	p1.add(check_qty6);
	p1.add(tooltip);
	
	
	dropbox.setBounds(440, 50,150,20);
	f.add(dropbox);	
	dropbox_qty.setBounds(600,50,150,20);
	f.add(dropbox_qty);
	
	f.add(p1);
	f.setSize(800, 600);//f is first window 
	f1.setLocationRelativeTo(null);	//f1 is the window that shows when show cart button is pressed
	f1.setSize(500, 500);
	f.setVisible(true);
	
	//f1.setVisible(true);
}
//this is used to display invoice price and cost of an item in the main window
class GetInvoice implements ActionListener
{
	public void actionPerformed(ActionEvent e)
	{//t1 - furniture,t2 - quantity, t3 - price, t4 - total
		Invoice invoice=new Invoice();
		int quantity= Integer.parseInt(t2.getText());//gets quantity
		String pcode= t1.getText();//gets furniture type for product code
		String pformat="";//gets price
		
		Product s= ProductDB.getProduct(pcode);
		invoice.addItem(new LineItem(s ,quantity));
		for(LineItem item: invoice.getItem())
		{
			if(s.getPrice() == -1 || item.getQTY() <=0)
			{
				JOptionPane.showMessageDialog(null, "Invalid Input","Incorrect input",JOptionPane.ERROR_MESSAGE);
			}
			else
			pformat = Double.toString(s.getPrice());
			t3.setText(pformat);//price format
			t4.setText(item.getTotalFormat());
			invoiceofitems+=item.getTotal();
			t5.setText(NumberFormat.getCurrencyInstance().format(invoiceofitems));//global variable	
		}	
		String item_info[]={t1.getText(),t2.getText(),t3.getText(),t4.getText(),t5.getText()};
		model.addRow(item_info);
		JTable table = new JTable(model);
		f1.add(new JScrollPane(table));
		
	}
}
//this is used for JTable items
//also used for menu item 2
class DisplayTable implements ActionListener
{
	public void actionPerformed(ActionEvent e)
	{//t1 - furniture,t2 - quantity, t3 - price, t4 - total
		Invoice invoice=new Invoice();
		int quantity= Integer.parseInt(t2.getText());//gets quantity
		String pcode= t1.getText();//gets furniture type for product code
		
		
		Product s= ProductDB.getProduct(pcode);
		invoice.addItem(new LineItem(s ,quantity));
		for(LineItem item: invoice.getItem())
		{
			if(s.getPrice() == -1 || item.getQTY() <=0)
			{
				JOptionPane.showMessageDialog(null, "Invalid Input","Incorrect input",JOptionPane.ERROR_MESSAGE);
			}
			
			
		}	
	
		
		JTable table = new JTable(model);
		f1.add(new JScrollPane(table));
		f1.setVisible(true);
	}
}	
class DropboxOrder implements ActionListener
{
public void actionPerformed(ActionEvent e)
{//t1 - furniture,t2 - quantity, t3 - price, t4 - total
	String furniture= (String)dropbox.getSelectedItem();	        
	t1.setText(furniture);
	String qty = (String)dropbox_qty.getSelectedItem();
	t2.setText(qty);
	Invoice invoice=new Invoice();
	int quantity= Integer.parseInt(t2.getText());//gets quantity
	String pcode= t1.getText();//gets furniture type for product code
	String pformat="";//gets price
	
	Product s= ProductDB.getProduct(pcode);
	invoice.addItem(new LineItem(s ,quantity));
	for(LineItem item: invoice.getItem())
	{
		if(s.getPrice() == -1 || item.getQTY() <=0)
		{
			JOptionPane.showMessageDialog(null, "Invalid Input","Incorrect input",JOptionPane.ERROR_MESSAGE);
		}
		else
		pformat = Double.toString(s.getPrice());
		t3.setText(pformat);//price format
		t4.setText(item.getTotalFormat());
		invoiceofitems+=item.getTotal();
		t5.setText(NumberFormat.getCurrencyInstance().format(invoiceofitems));//global variable	
	}	
	String item_info[]={t1.getText(),t2.getText(),t3.getText(),t4.getText(),t5.getText()};
	model.addRow(item_info);
	JTable table = new JTable(model);
	f1.add(new JScrollPane(table));
	}
}	
class ListentoMenuItem1 implements ActionListener
{
	public void actionPerformed(ActionEvent e)
	{//t1 - furniture,t2 - quantity, t3 - price, t4 - total
		Invoice invoice=new Invoice();
		int quantity= Integer.parseInt(t2.getText());//gets quantity
		String pcode= t1.getText();//gets furniture type for product code
		String pformat="";//gets price
		
		Product s= ProductDB.getProduct(pcode);
		invoice.addItem(new LineItem(s ,quantity));
		for(LineItem item: invoice.getItem())
		{
			if(s.getPrice() == -1 || item.getQTY() <=0)
			{
				JOptionPane.showMessageDialog(null, "Invalid Input","Incorrect input",JOptionPane.ERROR_MESSAGE);
			}
			else
			pformat = Double.toString(s.getPrice());
			t3.setText(pformat);//price format
			t4.setText(item.getTotalFormat());
			invoiceofitems+=item.getTotal();
			t5.setText(NumberFormat.getCurrencyInstance().format(invoiceofitems));//global variable	
		}
		JOptionPane.showMessageDialog(null, "Your invoice is " + NumberFormat.getCurrencyInstance().format(invoiceofitems));
	}
}
//this is used for checckbox items
class checkBox implements ActionListener
{
	public void actionPerformed(ActionEvent e)
	{
		double Total=0;
		int qty = 0;
		String msg="";
		if(checkbox1.isSelected())
		{
			double amount=0;
			qty = Integer.parseInt(check_qty1.getText());
			amount+=84.54 * qty;
			String s= Double.toString(amount);
			msg+="Couch: $" + s + "\n";
			Total+=amount;
		}
		if(checkbox2.isSelected())
		{
			double amount=0;
			qty = Integer.parseInt(check_qty2.getText());
			amount+=33.78 *qty;
			String s= Double.toString(amount);
			msg+="Chairs: $" + s + "\n";
			Total+=amount;
		}
		if(checkbox3.isSelected())
		{
			double amount=0;
			qty = Integer.parseInt(check_qty3.getText());
			amount+=128.21 *qty;
			String s= Double.toString(amount);
			msg+="Beds: $"+ s + "\n";
			Total+=amount;
		}
		if(checkbox4.isSelected())
		{
			double amount=0;
			qty = Integer.parseInt(check_qty4.getText());
			amount+=79.21 *qty;
			String s=Double.toString(amount);
			msg+="Tables: $"+ s + "\n";
			Total+=amount;
		}
		if(checkbox5.isSelected())
		{
			double amount=0;
			qty = Integer.parseInt(check_qty5.getText());
			amount+=20.21 *qty;
			String s=Double.toString(amount);
			msg+="Light Fixtures: $"+ s + "\n";
			Total+=amount;
		}
		if(checkbox6.isSelected())
		{
			double amount=0;
			qty = Integer.parseInt(check_qty6.getText());
			amount+=98.21 * qty;
			String s=Double.toString(amount);
			msg+="Cabinets: $"+ s + "\n";
			Total+=amount;
		}
		msg+="____________\n";
		JOptionPane.showMessageDialog(null, msg + "Your Total " + NumberFormat.getCurrencyInstance().format(Total));
	}
	
}

public static void main(String[] args)
	{
	//this is used to display the first row for JTable
	model.addColumn("Furniture Type");
	model.addColumn("Quantity");
	model.addColumn("Price");
	model.addColumn("Total");
	model.addColumn("Invoice");
		new InvoiceApp();	
	}
}
